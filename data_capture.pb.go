// Code generated by protoc-gen-go.
// source: data_capture.proto
// DO NOT EDIT!

package protos

import proto "github.com/golang/protobuf/proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal

// Ignoring public import of ItemData from inventory_item.proto

// Ignoring public import of ItemAward from inventory_item.proto

// Ignoring public import of ItemId from inventory_item.proto

// Ignoring public import of ItemType from inventory_item.proto

// Ignoring public import of BadgeType from enums.proto

// Ignoring public import of TutorialState from enums.proto

// Ignoring public import of PokemonId from enums.proto

// Ignoring public import of PokemonMovementType from enums.proto

// Ignoring public import of Gender from enums.proto

// Ignoring public import of ActivityType from enums.proto

// Ignoring public import of CameraTarget from enums.proto

// Ignoring public import of PokemonFamilyId from enums.proto

// Ignoring public import of ItemCategory from enums.proto

// Ignoring public import of CameraInterpolation from enums.proto

// Ignoring public import of Platform from enums.proto

// Ignoring public import of TeamColor from enums.proto

// Ignoring public import of PokemonMove from enums.proto

// Ignoring public import of ItemEffect from enums.proto

// Ignoring public import of PokemonType from enums.proto

// Ignoring public import of HoloIapItemCategory from enums.proto

// Ignoring public import of PokemonRarity from enums.proto

type CaptureProbability struct {
	PokeballType           []ItemId  `protobuf:"varint,1,rep,packed,name=pokeball_type,enum=POGOProtos.Inventory.Item.ItemId" json:"pokeball_type,omitempty"`
	CaptureProbability     []float32 `protobuf:"fixed32,2,rep,packed,name=capture_probability" json:"capture_probability,omitempty"`
	ReticleDifficultyScale float64   `protobuf:"fixed64,12,opt,name=reticle_difficulty_scale" json:"reticle_difficulty_scale,omitempty"`
}

func (m *CaptureProbability) Reset()         { *m = CaptureProbability{} }
func (m *CaptureProbability) String() string { return proto.CompactTextString(m) }
func (*CaptureProbability) ProtoMessage()    {}

type CaptureAward struct {
	ActivityType []ActivityType `protobuf:"varint,1,rep,packed,name=activity_type,enum=POGOProtos.Enums.ActivityType" json:"activity_type,omitempty"`
	Xp           []int32        `protobuf:"varint,2,rep,packed,name=xp" json:"xp,omitempty"`
	Candy        []int32        `protobuf:"varint,3,rep,packed,name=candy" json:"candy,omitempty"`
	Stardust     []int32        `protobuf:"varint,4,rep,packed,name=stardust" json:"stardust,omitempty"`
}

func (m *CaptureAward) Reset()         { *m = CaptureAward{} }
func (m *CaptureAward) String() string { return proto.CompactTextString(m) }
func (*CaptureAward) ProtoMessage()    {}

func init() {
}
