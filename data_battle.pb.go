// Code generated by protoc-gen-go.
// source: data_battle.proto
// DO NOT EDIT!

package protos

import proto "github.com/golang/protobuf/proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal

// Ignoring public import of ContactSettings from data_player.proto

// Ignoring public import of PlayerAvatar from data_player.proto

// Ignoring public import of Currency from data_player.proto

// Ignoring public import of EquippedBadge from data_player.proto

// Ignoring public import of PlayerStats from data_player.proto

// Ignoring public import of PlayerCamera from data_player.proto

// Ignoring public import of PlayerCurrency from data_player.proto

// Ignoring public import of PlayerPublicProfile from data_player.proto

// Ignoring public import of DailyBonus from data_player.proto

// Ignoring public import of PokedexEntry from data.proto

// Ignoring public import of PlayerData from data.proto

// Ignoring public import of DownloadUrlEntry from data.proto

// Ignoring public import of AssetDigestEntry from data.proto

// Ignoring public import of PlayerBadge from data.proto

// Ignoring public import of PokemonData from data.proto

// Ignoring public import of BuddyPokemon from data.proto

// Ignoring public import of GymState from data_gym.proto

// Ignoring public import of GymMembership from data_gym.proto

type BattleType int32

const (
	BattleType_BATTLE_TYPE_UNSET    BattleType = 0
	BattleType_BATTLE_TYPE_NORMAL   BattleType = 1
	BattleType_BATTLE_TYPE_TRAINING BattleType = 2
)

var BattleType_name = map[int32]string{
	0: "BATTLE_TYPE_UNSET",
	1: "BATTLE_TYPE_NORMAL",
	2: "BATTLE_TYPE_TRAINING",
}
var BattleType_value = map[string]int32{
	"BATTLE_TYPE_UNSET":    0,
	"BATTLE_TYPE_NORMAL":   1,
	"BATTLE_TYPE_TRAINING": 2,
}

func (x BattleType) String() string {
	return proto.EnumName(BattleType_name, int32(x))
}

type BattleState int32

const (
	BattleState_STATE_UNSET BattleState = 0
	BattleState_ACTIVE      BattleState = 1
	BattleState_VICTORY     BattleState = 2
	BattleState_DEFEATED    BattleState = 3
	BattleState_TIMED_OUT   BattleState = 4
)

var BattleState_name = map[int32]string{
	0: "STATE_UNSET",
	1: "ACTIVE",
	2: "VICTORY",
	3: "DEFEATED",
	4: "TIMED_OUT",
}
var BattleState_value = map[string]int32{
	"STATE_UNSET": 0,
	"ACTIVE":      1,
	"VICTORY":     2,
	"DEFEATED":    3,
	"TIMED_OUT":   4,
}

func (x BattleState) String() string {
	return proto.EnumName(BattleState_name, int32(x))
}

type BattleActionType int32

const (
	BattleActionType_ACTION_UNSET          BattleActionType = 0
	BattleActionType_ACTION_ATTACK         BattleActionType = 1
	BattleActionType_ACTION_DODGE          BattleActionType = 2
	BattleActionType_ACTION_SPECIAL_ATTACK BattleActionType = 3
	BattleActionType_ACTION_SWAP_POKEMON   BattleActionType = 4
	BattleActionType_ACTION_FAINT          BattleActionType = 5
	BattleActionType_ACTION_PLAYER_JOIN    BattleActionType = 6
	BattleActionType_ACTION_PLAYER_QUIT    BattleActionType = 7
	BattleActionType_ACTION_VICTORY        BattleActionType = 8
	BattleActionType_ACTION_DEFEAT         BattleActionType = 9
	BattleActionType_ACTION_TIMED_OUT      BattleActionType = 10
)

var BattleActionType_name = map[int32]string{
	0:  "ACTION_UNSET",
	1:  "ACTION_ATTACK",
	2:  "ACTION_DODGE",
	3:  "ACTION_SPECIAL_ATTACK",
	4:  "ACTION_SWAP_POKEMON",
	5:  "ACTION_FAINT",
	6:  "ACTION_PLAYER_JOIN",
	7:  "ACTION_PLAYER_QUIT",
	8:  "ACTION_VICTORY",
	9:  "ACTION_DEFEAT",
	10: "ACTION_TIMED_OUT",
}
var BattleActionType_value = map[string]int32{
	"ACTION_UNSET":          0,
	"ACTION_ATTACK":         1,
	"ACTION_DODGE":          2,
	"ACTION_SPECIAL_ATTACK": 3,
	"ACTION_SWAP_POKEMON":   4,
	"ACTION_FAINT":          5,
	"ACTION_PLAYER_JOIN":    6,
	"ACTION_PLAYER_QUIT":    7,
	"ACTION_VICTORY":        8,
	"ACTION_DEFEAT":         9,
	"ACTION_TIMED_OUT":      10,
}

func (x BattleActionType) String() string {
	return proto.EnumName(BattleActionType_name, int32(x))
}

type BattleAction struct {
	Type                          BattleActionType   `protobuf:"varint,1,opt,enum=POGOProtos.Data.Battle.BattleActionType" json:"Type,omitempty"`
	ActionStartMs                 int64              `protobuf:"varint,2,opt,name=action_start_ms" json:"action_start_ms,omitempty"`
	DurationMs                    int32              `protobuf:"varint,3,opt,name=duration_ms" json:"duration_ms,omitempty"`
	EnergyDelta                   int32              `protobuf:"varint,5,opt,name=energy_delta" json:"energy_delta,omitempty"`
	AttackerIndex                 int32              `protobuf:"varint,6,opt,name=attacker_index" json:"attacker_index,omitempty"`
	TargetIndex                   int32              `protobuf:"varint,7,opt,name=target_index" json:"target_index,omitempty"`
	ActivePokemonId               uint64             `protobuf:"fixed64,8,opt,name=active_pokemon_id" json:"active_pokemon_id,omitempty"`
	PlayerJoined                  *BattleParticipant `protobuf:"bytes,9,opt,name=player_joined" json:"player_joined,omitempty"`
	BattleResults                 *BattleResults     `protobuf:"bytes,10,opt,name=battle_results" json:"battle_results,omitempty"`
	DamageWindowsStartTimestampMs int64              `protobuf:"varint,11,opt,name=damage_windows_start_timestamp_ms" json:"damage_windows_start_timestamp_ms,omitempty"`
	DamageWindowsEndTimestampMs   int64              `protobuf:"varint,12,opt,name=damage_windows_end_timestamp_ms" json:"damage_windows_end_timestamp_ms,omitempty"`
	PlayerLeft                    *BattleParticipant `protobuf:"bytes,13,opt,name=player_left" json:"player_left,omitempty"`
	TargetPokemonId               uint64             `protobuf:"fixed64,14,opt,name=target_pokemon_id" json:"target_pokemon_id,omitempty"`
}

func (m *BattleAction) Reset()         { *m = BattleAction{} }
func (m *BattleAction) String() string { return proto.CompactTextString(m) }
func (*BattleAction) ProtoMessage()    {}

func (m *BattleAction) GetPlayerJoined() *BattleParticipant {
	if m != nil {
		return m.PlayerJoined
	}
	return nil
}

func (m *BattleAction) GetBattleResults() *BattleResults {
	if m != nil {
		return m.BattleResults
	}
	return nil
}

func (m *BattleAction) GetPlayerLeft() *BattleParticipant {
	if m != nil {
		return m.PlayerLeft
	}
	return nil
}

type BattleParticipant struct {
	ActivePokemon        *BattlePokemonInfo   `protobuf:"bytes,1,opt,name=active_pokemon" json:"active_pokemon,omitempty"`
	TrainerPublicProfile *PlayerPublicProfile `protobuf:"bytes,2,opt,name=trainer_public_profile" json:"trainer_public_profile,omitempty"`
	ReversePokemon       []*BattlePokemonInfo `protobuf:"bytes,3,rep,name=reverse_pokemon" json:"reverse_pokemon,omitempty"`
	DefeatedPokemon      []*BattlePokemonInfo `protobuf:"bytes,4,rep,name=defeated_pokemon" json:"defeated_pokemon,omitempty"`
}

func (m *BattleParticipant) Reset()         { *m = BattleParticipant{} }
func (m *BattleParticipant) String() string { return proto.CompactTextString(m) }
func (*BattleParticipant) ProtoMessage()    {}

func (m *BattleParticipant) GetActivePokemon() *BattlePokemonInfo {
	if m != nil {
		return m.ActivePokemon
	}
	return nil
}

func (m *BattleParticipant) GetTrainerPublicProfile() *PlayerPublicProfile {
	if m != nil {
		return m.TrainerPublicProfile
	}
	return nil
}

func (m *BattleParticipant) GetReversePokemon() []*BattlePokemonInfo {
	if m != nil {
		return m.ReversePokemon
	}
	return nil
}

func (m *BattleParticipant) GetDefeatedPokemon() []*BattlePokemonInfo {
	if m != nil {
		return m.DefeatedPokemon
	}
	return nil
}

type BattlePokemonInfo struct {
	PokemonData   *PokemonData `protobuf:"bytes,1,opt,name=pokemon_data" json:"pokemon_data,omitempty"`
	CurrentHealth int32        `protobuf:"varint,2,opt,name=current_health" json:"current_health,omitempty"`
	CurrentEnergy int32        `protobuf:"varint,3,opt,name=current_energy" json:"current_energy,omitempty"`
}

func (m *BattlePokemonInfo) Reset()         { *m = BattlePokemonInfo{} }
func (m *BattlePokemonInfo) String() string { return proto.CompactTextString(m) }
func (*BattlePokemonInfo) ProtoMessage()    {}

func (m *BattlePokemonInfo) GetPokemonData() *PokemonData {
	if m != nil {
		return m.PokemonData
	}
	return nil
}

type BattleLog struct {
	State                  BattleState     `protobuf:"varint,1,opt,name=state,enum=POGOProtos.Data.Battle.BattleState" json:"state,omitempty"`
	BattleType             BattleType      `protobuf:"varint,2,opt,name=battle_type,enum=POGOProtos.Data.Battle.BattleType" json:"battle_type,omitempty"`
	ServerMs               int64           `protobuf:"varint,3,opt,name=server_ms" json:"server_ms,omitempty"`
	BattleActions          []*BattleAction `protobuf:"bytes,4,rep,name=battle_actions" json:"battle_actions,omitempty"`
	BattleStartTimestampMs int64           `protobuf:"varint,5,opt,name=battle_start_timestamp_ms" json:"battle_start_timestamp_ms,omitempty"`
	BattleEndTimestampMs   int64           `protobuf:"varint,6,opt,name=battle_end_timestamp_ms" json:"battle_end_timestamp_ms,omitempty"`
}

func (m *BattleLog) Reset()         { *m = BattleLog{} }
func (m *BattleLog) String() string { return proto.CompactTextString(m) }
func (*BattleLog) ProtoMessage()    {}

func (m *BattleLog) GetBattleActions() []*BattleAction {
	if m != nil {
		return m.BattleActions
	}
	return nil
}

type BattleResults struct {
	GymState                *GymState            `protobuf:"bytes,1,opt,name=gym_state" json:"gym_state,omitempty"`
	Attackers               []*BattleParticipant `protobuf:"bytes,2,rep,name=attackers" json:"attackers,omitempty"`
	PlayerExperienceAwarded []int32              `protobuf:"varint,3,rep,name=player_experience_awarded" json:"player_experience_awarded,omitempty"`
	NextDefenderPokemonId   int64                `protobuf:"varint,4,opt,name=next_defender_pokemon_id" json:"next_defender_pokemon_id,omitempty"`
	GymPointsDelta          int32                `protobuf:"varint,5,opt,name=gym_points_delta" json:"gym_points_delta,omitempty"`
}

func (m *BattleResults) Reset()         { *m = BattleResults{} }
func (m *BattleResults) String() string { return proto.CompactTextString(m) }
func (*BattleResults) ProtoMessage()    {}

func (m *BattleResults) GetGymState() *GymState {
	if m != nil {
		return m.GymState
	}
	return nil
}

func (m *BattleResults) GetAttackers() []*BattleParticipant {
	if m != nil {
		return m.Attackers
	}
	return nil
}

func init() {
	proto.RegisterEnum("POGOProtos.Data.Battle.BattleType", BattleType_name, BattleType_value)
	proto.RegisterEnum("POGOProtos.Data.Battle.BattleState", BattleState_name, BattleState_value)
	proto.RegisterEnum("POGOProtos.Data.Battle.BattleActionType", BattleActionType_name, BattleActionType_value)
}
