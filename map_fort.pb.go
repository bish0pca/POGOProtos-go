// Code generated by protoc-gen-go.
// source: map_fort.proto
// DO NOT EDIT!

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of ActivityType from enums.proto

// Ignoring public import of BadgeType from enums.proto

// Ignoring public import of CameraInterpolation from enums.proto

// Ignoring public import of CameraTarget from enums.proto

// Ignoring public import of Gender from enums.proto

// Ignoring public import of HoloIapItemCategory from enums.proto

// Ignoring public import of ItemCategory from enums.proto

// Ignoring public import of ItemEffect from enums.proto

// Ignoring public import of Platform from enums.proto

// Ignoring public import of PokemonFamilyId from enums.proto

// Ignoring public import of PokemonId from enums.proto

// Ignoring public import of PokemonMove from enums.proto

// Ignoring public import of PokemonMovementType from enums.proto

// Ignoring public import of PokemonRarity from enums.proto

// Ignoring public import of PokemonType from enums.proto

// Ignoring public import of TeamColor from enums.proto

// Ignoring public import of TutorialState from enums.proto

// Ignoring public import of ItemAward from inventory_item.proto

// Ignoring public import of ItemData from inventory_item.proto

// Ignoring public import of ItemId from inventory_item.proto

// Ignoring public import of ItemType from inventory_item.proto

type FortRenderingType int32

const (
	FortRenderingType_DEFAULT       FortRenderingType = 0
	FortRenderingType_INTERNAL_TEST FortRenderingType = 1
)

var FortRenderingType_name = map[int32]string{
	0: "DEFAULT",
	1: "INTERNAL_TEST",
}
var FortRenderingType_value = map[string]int32{
	"DEFAULT":       0,
	"INTERNAL_TEST": 1,
}

func (x FortRenderingType) String() string {
	return proto.EnumName(FortRenderingType_name, int32(x))
}
func (FortRenderingType) EnumDescriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

type FortSponsor int32

const (
	FortSponsor_UNSET_SPONSOR FortSponsor = 0
	FortSponsor_MCDONALDS     FortSponsor = 1
	FortSponsor_POKEMON_STORE FortSponsor = 2
)

var FortSponsor_name = map[int32]string{
	0: "UNSET_SPONSOR",
	1: "MCDONALDS",
	2: "POKEMON_STORE",
}
var FortSponsor_value = map[string]int32{
	"UNSET_SPONSOR": 0,
	"MCDONALDS":     1,
	"POKEMON_STORE": 2,
}

func (x FortSponsor) String() string {
	return proto.EnumName(FortSponsor_name, int32(x))
}
func (FortSponsor) EnumDescriptor() ([]byte, []int) { return fileDescriptor9, []int{1} }

type FortType int32

const (
	FortType_GYM        FortType = 0
	FortType_CHECKPOINT FortType = 1
)

var FortType_name = map[int32]string{
	0: "GYM",
	1: "CHECKPOINT",
}
var FortType_value = map[string]int32{
	"GYM":        0,
	"CHECKPOINT": 1,
}

func (x FortType) String() string {
	return proto.EnumName(FortType_name, int32(x))
}
func (FortType) EnumDescriptor() ([]byte, []int) { return fileDescriptor9, []int{2} }

type FortData struct {
	Id                      string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	LastModifiedTimestampMs int64    `protobuf:"varint,2,opt,name=last_modified_timestamp_ms,json=lastModifiedTimestampMs" json:"last_modified_timestamp_ms,omitempty"`
	Latitude                float64  `protobuf:"fixed64,3,opt,name=latitude" json:"latitude,omitempty"`
	Longitude               float64  `protobuf:"fixed64,4,opt,name=longitude" json:"longitude,omitempty"`
	Enabled                 bool     `protobuf:"varint,8,opt,name=enabled" json:"enabled,omitempty"`
	Type                    FortType `protobuf:"varint,9,opt,name=type,enum=POGOProtos.Map.Fort.FortType" json:"type,omitempty"`
	// Team that owns the gym
	OwnedByTeam TeamColor `protobuf:"varint,5,opt,name=owned_by_team,json=ownedByTeam,enum=POGOProtos.Enums.TeamColor" json:"owned_by_team,omitempty"`
	// Highest CP Pokemon at the gym
	GuardPokemonId PokemonId `protobuf:"varint,6,opt,name=guard_pokemon_id,json=guardPokemonId,enum=POGOProtos.Enums.PokemonId" json:"guard_pokemon_id,omitempty"`
	GuardPokemonCp int32     `protobuf:"varint,7,opt,name=guard_pokemon_cp,json=guardPokemonCp" json:"guard_pokemon_cp,omitempty"`
	// Prestigate / experience of the gym
	GymPoints int64 `protobuf:"varint,10,opt,name=gym_points,json=gymPoints" json:"gym_points,omitempty"`
	// Whether someone is battling at the gym currently
	IsInBattle bool `protobuf:"varint,11,opt,name=is_in_battle,json=isInBattle" json:"is_in_battle,omitempty"`
	// // Fields related to pokestops only
	ActiveFortModifier []ItemId      `protobuf:"varint,12,rep,packed,name=active_fort_modifier,json=activeFortModifier,enum=POGOProtos.Inventory.Item.ItemId" json:"active_fort_modifier,omitempty"`
	LureInfo           *FortLureInfo `protobuf:"bytes,13,opt,name=lure_info,json=lureInfo" json:"lure_info,omitempty"`
	// Timestamp when the pokestop can be activated again to get items / xp
	CooldownCompleteTimestampMs int64             `protobuf:"varint,14,opt,name=cooldown_complete_timestamp_ms,json=cooldownCompleteTimestampMs" json:"cooldown_complete_timestamp_ms,omitempty"`
	Sponsor                     FortSponsor       `protobuf:"varint,15,opt,name=sponsor,enum=POGOProtos.Map.Fort.FortSponsor" json:"sponsor,omitempty"`
	RenderingType               FortRenderingType `protobuf:"varint,16,opt,name=rendering_type,json=renderingType,enum=POGOProtos.Map.Fort.FortRenderingType" json:"rendering_type,omitempty"`
}

func (m *FortData) Reset()                    { *m = FortData{} }
func (m *FortData) String() string            { return proto.CompactTextString(m) }
func (*FortData) ProtoMessage()               {}
func (*FortData) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

func (m *FortData) GetLureInfo() *FortLureInfo {
	if m != nil {
		return m.LureInfo
	}
	return nil
}

type FortLureInfo struct {
	FortId                 string    `protobuf:"bytes,1,opt,name=fort_id,json=fortId" json:"fort_id,omitempty"`
	EncounterId            uint64    `protobuf:"fixed64,2,opt,name=encounter_id,json=encounterId" json:"encounter_id,omitempty"`
	ActivePokemonId        PokemonId `protobuf:"varint,3,opt,name=active_pokemon_id,json=activePokemonId,enum=POGOProtos.Enums.PokemonId" json:"active_pokemon_id,omitempty"`
	LureExpiresTimestampMs int64     `protobuf:"varint,4,opt,name=lure_expires_timestamp_ms,json=lureExpiresTimestampMs" json:"lure_expires_timestamp_ms,omitempty"`
}

func (m *FortLureInfo) Reset()                    { *m = FortLureInfo{} }
func (m *FortLureInfo) String() string            { return proto.CompactTextString(m) }
func (*FortLureInfo) ProtoMessage()               {}
func (*FortLureInfo) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{1} }

type FortModifier struct {
	ItemId                 ItemId `protobuf:"varint,1,opt,name=item_id,json=itemId,enum=POGOProtos.Inventory.Item.ItemId" json:"item_id,omitempty"`
	ExpirationTimestampMs  int64  `protobuf:"varint,2,opt,name=expiration_timestamp_ms,json=expirationTimestampMs" json:"expiration_timestamp_ms,omitempty"`
	DeployerPlayerCodename string `protobuf:"bytes,3,opt,name=deployer_player_codename,json=deployerPlayerCodename" json:"deployer_player_codename,omitempty"`
}

func (m *FortModifier) Reset()                    { *m = FortModifier{} }
func (m *FortModifier) String() string            { return proto.CompactTextString(m) }
func (*FortModifier) ProtoMessage()               {}
func (*FortModifier) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{2} }

type FortSummary struct {
	FortSummaryId           string  `protobuf:"bytes,1,opt,name=fort_summary_id,json=fortSummaryId" json:"fort_summary_id,omitempty"`
	LastModifiedTimestampMs int64   `protobuf:"varint,2,opt,name=last_modified_timestamp_ms,json=lastModifiedTimestampMs" json:"last_modified_timestamp_ms,omitempty"`
	Latitude                float64 `protobuf:"fixed64,3,opt,name=latitude" json:"latitude,omitempty"`
	Longitude               float64 `protobuf:"fixed64,4,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *FortSummary) Reset()                    { *m = FortSummary{} }
func (m *FortSummary) String() string            { return proto.CompactTextString(m) }
func (*FortSummary) ProtoMessage()               {}
func (*FortSummary) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{3} }

func init() {
	proto.RegisterType((*FortData)(nil), "POGOProtos.Map.Fort.FortData")
	proto.RegisterType((*FortLureInfo)(nil), "POGOProtos.Map.Fort.FortLureInfo")
	proto.RegisterType((*FortModifier)(nil), "POGOProtos.Map.Fort.FortModifier")
	proto.RegisterType((*FortSummary)(nil), "POGOProtos.Map.Fort.FortSummary")
	proto.RegisterEnum("POGOProtos.Map.Fort.FortRenderingType", FortRenderingType_name, FortRenderingType_value)
	proto.RegisterEnum("POGOProtos.Map.Fort.FortSponsor", FortSponsor_name, FortSponsor_value)
	proto.RegisterEnum("POGOProtos.Map.Fort.FortType", FortType_name, FortType_value)
}

func init() { proto.RegisterFile("map_fort.proto", fileDescriptor9) }

var fileDescriptor9 = []byte{
	// 817 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xc4, 0x55, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0x36, 0x2d, 0x47, 0x3f, 0x23, 0x4b, 0x96, 0xb7, 0x69, 0xcc, 0x3a, 0x4d, 0xc1, 0xb8, 0x40,
	0x40, 0xf8, 0x20, 0xa0, 0x09, 0x50, 0xb4, 0x29, 0xd0, 0xc2, 0x96, 0x19, 0x97, 0x88, 0x25, 0x12,
	0x14, 0x73, 0x68, 0x2f, 0x8b, 0xb5, 0x76, 0x25, 0x2c, 0x4a, 0xee, 0x12, 0xcb, 0x55, 0x52, 0xbe,
	0x53, 0xcf, 0x3d, 0xf5, 0x19, 0xfa, 0x4c, 0x05, 0x97, 0xa4, 0x7e, 0xda, 0x18, 0xed, 0xad, 0x17,
	0x72, 0x67, 0xe6, 0x9b, 0xd1, 0xce, 0x7c, 0x1f, 0x47, 0x30, 0x4c, 0x49, 0x86, 0x97, 0x52, 0xe9,
	0x71, 0xa6, 0xa4, 0x96, 0xe8, 0x93, 0x30, 0xb8, 0x0d, 0xc2, 0xf2, 0x98, 0x8f, 0xa7, 0x24, 0x1b,
	0xbf, 0x91, 0x4a, 0x9f, 0xf7, 0x99, 0x58, 0xa7, 0x79, 0x85, 0x38, 0x7f, 0xcc, 0xc5, 0x7b, 0x26,
	0xb4, 0x54, 0x05, 0xe6, 0x9a, 0xa5, 0x95, 0xf7, 0xe2, 0xf7, 0x36, 0x74, 0x4b, 0xec, 0x0d, 0xd1,
	0x04, 0x0d, 0xe1, 0x90, 0x53, 0xdb, 0x72, 0x2c, 0xb7, 0x17, 0x1d, 0x72, 0x8a, 0xbe, 0x83, 0xf3,
	0x84, 0xe4, 0x1a, 0xa7, 0x92, 0xf2, 0x25, 0x67, 0x14, 0x6b, 0x9e, 0xb2, 0x5c, 0x93, 0x34, 0xc3,
	0x69, 0x6e, 0x1f, 0x3a, 0x96, 0xdb, 0x8a, 0xce, 0x4a, 0xc4, 0xb4, 0x06, 0xc4, 0x4d, 0x7c, 0x9a,
	0xa3, 0x73, 0xe8, 0x26, 0x44, 0x73, 0xbd, 0xa6, 0xcc, 0x6e, 0x39, 0x96, 0x6b, 0x45, 0x1b, 0x1b,
	0x7d, 0x0e, 0xbd, 0x44, 0x8a, 0x55, 0x15, 0x3c, 0x32, 0xc1, 0xad, 0x03, 0xd9, 0xd0, 0x61, 0x82,
	0xdc, 0x27, 0x8c, 0xda, 0x5d, 0xc7, 0x72, 0xbb, 0x51, 0x63, 0xa2, 0xaf, 0xe0, 0x48, 0x17, 0x19,
	0xb3, 0x7b, 0x8e, 0xe5, 0x0e, 0x5f, 0x3e, 0x1b, 0x7f, 0xa4, 0x69, 0xf3, 0x88, 0x8b, 0x8c, 0x45,
	0x06, 0x8a, 0x7e, 0x80, 0x81, 0xfc, 0x20, 0x18, 0xc5, 0xf7, 0x05, 0xd6, 0x8c, 0xa4, 0xf6, 0x23,
	0x93, 0xfb, 0x74, 0x37, 0xd7, 0x33, 0x63, 0x8a, 0x19, 0x49, 0x27, 0x32, 0x91, 0x2a, 0xea, 0x9b,
	0x8c, 0xeb, 0xa2, 0xf4, 0x20, 0x0f, 0x46, 0xab, 0x35, 0x51, 0x14, 0x67, 0xf2, 0x17, 0x96, 0x4a,
	0x81, 0x39, 0xb5, 0xdb, 0x0f, 0xd5, 0x08, 0x2b, 0x8c, 0x4f, 0xa3, 0xa1, 0x49, 0xda, 0xd8, 0xc8,
	0xfd, 0x7b, 0x99, 0x45, 0x66, 0x77, 0x1c, 0xcb, 0x7d, 0xb4, 0x8f, 0x9c, 0x64, 0xe8, 0x19, 0xc0,
	0xaa, 0x48, 0x71, 0x26, 0xb9, 0xd0, 0xb9, 0x0d, 0x66, 0xca, 0xbd, 0x55, 0x91, 0x86, 0xc6, 0x81,
	0x1c, 0x38, 0xe6, 0x39, 0xe6, 0x02, 0xdf, 0x13, 0xad, 0x13, 0x66, 0xf7, 0xcd, 0x88, 0x80, 0xe7,
	0xbe, 0xb8, 0x36, 0x1e, 0x34, 0x87, 0xc7, 0x64, 0xa1, 0xf9, 0x7b, 0x66, 0x04, 0xd2, 0xb0, 0xa7,
	0xec, 0x63, 0xa7, 0xe5, 0x0e, 0x5f, 0x3e, 0xdf, 0xbd, 0xb5, 0xdf, 0x68, 0x62, 0xec, 0x97, 0x9a,
	0x28, 0x1f, 0x3e, 0x8d, 0x50, 0x95, 0x5e, 0x4e, 0xb2, 0x66, 0x56, 0xa1, 0xef, 0xa1, 0x97, 0xac,
	0x15, 0xc3, 0x5c, 0x2c, 0xa5, 0x3d, 0x70, 0x2c, 0xb7, 0xbf, 0x5f, 0x69, 0x6f, 0xfe, 0x77, 0x6b,
	0xc5, 0x7c, 0xb1, 0x94, 0x51, 0x37, 0xa9, 0x4f, 0x68, 0x02, 0x5f, 0x2c, 0xa4, 0x4c, 0xa8, 0xfc,
	0x20, 0xf0, 0x42, 0xa6, 0x59, 0xc2, 0x34, 0xdb, 0xd7, 0xd3, 0xd0, 0x74, 0xfa, 0xb4, 0x41, 0x4d,
	0x6a, 0xd0, 0xae, 0xa6, 0x5e, 0x43, 0x27, 0xcf, 0xa4, 0xc8, 0xa5, 0xb2, 0x4f, 0x0c, 0x05, 0xce,
	0x83, 0x57, 0x98, 0x57, 0xb8, 0xa8, 0x49, 0x40, 0x53, 0x18, 0x2a, 0x26, 0x28, 0x53, 0x5c, 0xac,
	0xb0, 0x51, 0xd1, 0xc8, 0x94, 0x78, 0xf1, 0x60, 0x89, 0xa8, 0x81, 0x1b, 0x39, 0x0d, 0xd4, 0xae,
	0x79, 0xf1, 0xa7, 0x05, 0xc7, 0xbb, 0xad, 0xa2, 0x33, 0xe8, 0x98, 0x71, 0x6f, 0xbe, 0xa0, 0x76,
	0x69, 0xfa, 0x14, 0x3d, 0x87, 0x63, 0x26, 0x16, 0x72, 0x2d, 0x34, 0x53, 0x65, 0xb4, 0xfc, 0x6e,
	0xda, 0x51, 0x7f, 0xe3, 0xf3, 0x29, 0xba, 0x85, 0xd3, 0x9a, 0xb1, 0x1d, 0x91, 0xb5, 0xfe, 0x5d,
	0x64, 0x27, 0x55, 0xd6, 0x56, 0x65, 0xdf, 0xc2, 0x67, 0x86, 0x25, 0xf6, 0x6b, 0xc6, 0x15, 0xcb,
	0xf7, 0x07, 0x7c, 0x64, 0x06, 0xfc, 0xa4, 0x04, 0x78, 0x55, 0x7c, 0x67, 0xb6, 0x17, 0x7f, 0xd4,
	0x0d, 0x6d, 0x18, 0x7f, 0x0d, 0x9d, 0x72, 0x51, 0x34, 0x0d, 0xfd, 0x27, 0xe5, 0xb4, 0xb9, 0x79,
	0xa3, 0xaf, 0xe1, 0xcc, 0x5c, 0x81, 0x68, 0x2e, 0xc5, 0xc7, 0xd6, 0xc6, 0xa7, 0xdb, 0xf0, 0x2e,
	0xc1, 0xdf, 0x80, 0x4d, 0x59, 0x96, 0xc8, 0x82, 0x29, 0x9c, 0x25, 0xa4, 0x7c, 0x2d, 0x24, 0x65,
	0x82, 0xa4, 0xd5, 0x12, 0xe9, 0x45, 0x4f, 0x9a, 0x78, 0x68, 0xc2, 0x93, 0x3a, 0x7a, 0xf1, 0x9b,
	0x05, 0x7d, 0xc3, 0xfb, 0x3a, 0x4d, 0x89, 0x2a, 0xd0, 0x0b, 0x38, 0x31, 0x74, 0xe4, 0x95, 0xbd,
	0xa5, 0x65, 0xb0, 0xdc, 0xa2, 0xfc, 0xff, 0x6b, 0xc7, 0x5d, 0xbe, 0x82, 0xd3, 0x7f, 0x48, 0x0c,
	0xf5, 0xa1, 0x73, 0xe3, 0xbd, 0xb9, 0x7a, 0x77, 0x17, 0x8f, 0x0e, 0xd0, 0x29, 0x0c, 0xfc, 0x59,
	0xec, 0x45, 0xb3, 0xab, 0x3b, 0x1c, 0x7b, 0xf3, 0x78, 0x64, 0x5d, 0x5e, 0xd7, 0x2d, 0xd6, 0x8a,
	0x3e, 0x85, 0xc1, 0xbb, 0xd9, 0xdc, 0x8b, 0xf1, 0x3c, 0x0c, 0x66, 0xf3, 0x20, 0x1a, 0x1d, 0xa0,
	0x01, 0xf4, 0xa6, 0x93, 0x9b, 0x60, 0x76, 0x75, 0x77, 0x33, 0x1f, 0x59, 0x25, 0x22, 0x0c, 0xde,
	0x7a, 0xd3, 0x60, 0x86, 0xe7, 0x71, 0x10, 0x79, 0xa3, 0xc3, 0xcb, 0x2f, 0xab, 0x7d, 0x6f, 0x7e,
	0xaf, 0x03, 0xad, 0xdb, 0x9f, 0xa6, 0xa3, 0x03, 0x34, 0x04, 0x98, 0xfc, 0xe8, 0x4d, 0xde, 0x86,
	0x81, 0x3f, 0x8b, 0x47, 0xd6, 0x75, 0xf7, 0xe7, 0xb6, 0xf9, 0x7b, 0xc8, 0xc3, 0x83, 0xd0, 0xba,
	0xaf, 0xce, 0xaf, 0xfe, 0x0a, 0x00, 0x00, 0xff, 0xff, 0xad, 0xc2, 0x7b, 0xdd, 0x74, 0x06, 0x00,
	0x00,
}
