// Code generated by protoc-gen-go.
// source: map_fort.proto
// DO NOT EDIT!

package protos

import proto "github.com/golang/protobuf/proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal

// Ignoring public import of BadgeType from enums.proto

// Ignoring public import of TutorialState from enums.proto

// Ignoring public import of PokemonId from enums.proto

// Ignoring public import of PokemonMovementType from enums.proto

// Ignoring public import of Gender from enums.proto

// Ignoring public import of ActivityType from enums.proto

// Ignoring public import of CameraTarget from enums.proto

// Ignoring public import of PokemonFamilyId from enums.proto

// Ignoring public import of ItemCategory from enums.proto

// Ignoring public import of CameraInterpolation from enums.proto

// Ignoring public import of Platform from enums.proto

// Ignoring public import of TeamColor from enums.proto

// Ignoring public import of PokemonMove from enums.proto

// Ignoring public import of ItemEffect from enums.proto

// Ignoring public import of PokemonType from enums.proto

// Ignoring public import of HoloIapItemCategory from enums.proto

// Ignoring public import of PokemonRarity from enums.proto

// Ignoring public import of ItemData from inventory_item.proto

// Ignoring public import of ItemAward from inventory_item.proto

// Ignoring public import of ItemId from inventory_item.proto

// Ignoring public import of ItemType from inventory_item.proto

type FortRenderingType int32

const (
	FortRenderingType_DEFAULT       FortRenderingType = 0
	FortRenderingType_INTERNAL_TEST FortRenderingType = 1
)

var FortRenderingType_name = map[int32]string{
	0: "DEFAULT",
	1: "INTERNAL_TEST",
}
var FortRenderingType_value = map[string]int32{
	"DEFAULT":       0,
	"INTERNAL_TEST": 1,
}

func (x FortRenderingType) String() string {
	return proto.EnumName(FortRenderingType_name, int32(x))
}

type FortSponsor int32

const (
	FortSponsor_UNSET_SPONSOR FortSponsor = 0
	FortSponsor_MCDONALDS     FortSponsor = 1
	FortSponsor_POKEMON_STORE FortSponsor = 2
)

var FortSponsor_name = map[int32]string{
	0: "UNSET_SPONSOR",
	1: "MCDONALDS",
	2: "POKEMON_STORE",
}
var FortSponsor_value = map[string]int32{
	"UNSET_SPONSOR": 0,
	"MCDONALDS":     1,
	"POKEMON_STORE": 2,
}

func (x FortSponsor) String() string {
	return proto.EnumName(FortSponsor_name, int32(x))
}

type FortType int32

const (
	FortType_GYM        FortType = 0
	FortType_CHECKPOINT FortType = 1
)

var FortType_name = map[int32]string{
	0: "GYM",
	1: "CHECKPOINT",
}
var FortType_value = map[string]int32{
	"GYM":        0,
	"CHECKPOINT": 1,
}

func (x FortType) String() string {
	return proto.EnumName(FortType_name, int32(x))
}

type FortSummary struct {
	FortSummaryId           string  `protobuf:"bytes,1,opt,name=fort_summary_id" json:"fort_summary_id,omitempty"`
	LastModifiedTimestampMs int64   `protobuf:"varint,2,opt,name=last_modified_timestamp_ms" json:"last_modified_timestamp_ms,omitempty"`
	Latitude                float64 `protobuf:"fixed64,3,opt,name=latitude" json:"latitude,omitempty"`
	Longitude               float64 `protobuf:"fixed64,4,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *FortSummary) Reset()         { *m = FortSummary{} }
func (m *FortSummary) String() string { return proto.CompactTextString(m) }
func (*FortSummary) ProtoMessage()    {}

type FortLureInfo struct {
	FortId                 string    `protobuf:"bytes,1,opt,name=fort_id" json:"fort_id,omitempty"`
	EncounterId            uint64    `protobuf:"fixed64,2,opt,name=encounter_id" json:"encounter_id,omitempty"`
	ActivePokemonId        PokemonId `protobuf:"varint,3,opt,name=active_pokemon_id,enum=POGOProtos.Enums.PokemonId" json:"active_pokemon_id,omitempty"`
	LureExpiresTimestampMs int64     `protobuf:"varint,4,opt,name=lure_expires_timestamp_ms" json:"lure_expires_timestamp_ms,omitempty"`
}

func (m *FortLureInfo) Reset()         { *m = FortLureInfo{} }
func (m *FortLureInfo) String() string { return proto.CompactTextString(m) }
func (*FortLureInfo) ProtoMessage()    {}

type FortModifier struct {
	ItemId                 ItemId `protobuf:"varint,1,opt,name=item_id,enum=POGOProtos.Inventory.Item.ItemId" json:"item_id,omitempty"`
	ExpirationTimestampMs  int64  `protobuf:"varint,2,opt,name=expiration_timestamp_ms" json:"expiration_timestamp_ms,omitempty"`
	DeployerPlayerCodename string `protobuf:"bytes,3,opt,name=deployer_player_codename" json:"deployer_player_codename,omitempty"`
}

func (m *FortModifier) Reset()         { *m = FortModifier{} }
func (m *FortModifier) String() string { return proto.CompactTextString(m) }
func (*FortModifier) ProtoMessage()    {}

type FortData struct {
	Id                      string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	LastModifiedTimestampMs int64    `protobuf:"varint,2,opt,name=last_modified_timestamp_ms" json:"last_modified_timestamp_ms,omitempty"`
	Latitude                float64  `protobuf:"fixed64,3,opt,name=latitude" json:"latitude,omitempty"`
	Longitude               float64  `protobuf:"fixed64,4,opt,name=longitude" json:"longitude,omitempty"`
	Enabled                 bool     `protobuf:"varint,8,opt,name=enabled" json:"enabled,omitempty"`
	Type                    FortType `protobuf:"varint,9,opt,name=type,enum=POGOProtos.Map.Fort.FortType" json:"type,omitempty"`
	// Team that owns the gym
	OwnedByTeam TeamColor `protobuf:"varint,5,opt,name=owned_by_team,enum=POGOProtos.Enums.TeamColor" json:"owned_by_team,omitempty"`
	// Highest CP Pokemon at the gym
	GuardPokemonId PokemonId `protobuf:"varint,6,opt,name=guard_pokemon_id,enum=POGOProtos.Enums.PokemonId" json:"guard_pokemon_id,omitempty"`
	GuardPokemonCp int32     `protobuf:"varint,7,opt,name=guard_pokemon_cp" json:"guard_pokemon_cp,omitempty"`
	// Prestigate / experience of the gym
	GymPoints int64 `protobuf:"varint,10,opt,name=gym_points" json:"gym_points,omitempty"`
	// Whether someone is battling at the gym currently
	IsInBattle bool `protobuf:"varint,11,opt,name=is_in_battle" json:"is_in_battle,omitempty"`
	// // Fields related to pokestops only
	ActiveFortModifier []ItemId      `protobuf:"varint,12,rep,name=active_fort_modifier,enum=POGOProtos.Inventory.Item.ItemId" json:"active_fort_modifier,omitempty"`
	LureInfo           *FortLureInfo `protobuf:"bytes,13,opt,name=lure_info" json:"lure_info,omitempty"`
	// Timestamp when the pokestop can be activated again to get items / xp
	CooldownCompleteTimestampMs int64             `protobuf:"varint,14,opt,name=cooldown_complete_timestamp_ms" json:"cooldown_complete_timestamp_ms,omitempty"`
	Sponsor                     FortSponsor       `protobuf:"varint,15,opt,name=sponsor,enum=POGOProtos.Map.Fort.FortSponsor" json:"sponsor,omitempty"`
	RenderingType               FortRenderingType `protobuf:"varint,16,opt,name=rendering_type,enum=POGOProtos.Map.Fort.FortRenderingType" json:"rendering_type,omitempty"`
}

func (m *FortData) Reset()         { *m = FortData{} }
func (m *FortData) String() string { return proto.CompactTextString(m) }
func (*FortData) ProtoMessage()    {}

func (m *FortData) GetLureInfo() *FortLureInfo {
	if m != nil {
		return m.LureInfo
	}
	return nil
}

func init() {
	proto.RegisterEnum("POGOProtos.Map.Fort.FortRenderingType", FortRenderingType_name, FortRenderingType_value)
	proto.RegisterEnum("POGOProtos.Map.Fort.FortSponsor", FortSponsor_name, FortSponsor_value)
	proto.RegisterEnum("POGOProtos.Map.Fort.FortType", FortType_name, FortType_value)
}
